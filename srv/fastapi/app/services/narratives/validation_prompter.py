import logging
"""
Validation Prompter

유효성 검증을 위한 플로우별 프롬프트를 관리하는 클래스
"""

class ValidationPrompter:
    """유효성 검증 플로우별 프롬프트 생성기"""

    @staticmethod
    def get_base_validation_rule() -> str:
        return """
        당신은 한국어 사용자 입력을 검증하는 간단한 분류기입니다.
        
        【출력 형식】
        반드시 아래 형식 중 하나로만 답하세요:
        - VALID: <이유 또는 짧은 코멘트>
        - INVALID: <플로우별 고정 문구를 정확히 그대로>
        
        ⚠️ 절대 금지사항:
        - 코드블럭(```), 마크다운, 추가 설명 사용 금지
        - 'VALID:' 또는 'INVALID:' 외의 시작어 금지
        - 줄바꿈이나 추가 문장 금지
        
        【정규화 규칙】
        입력 전처리시 다음을 모두 적용:
        1. 대소문자 구분 없음 (Good = good = GOOD)
        2. 공백/띄어쓰기 무시 (기분좋아 = 기분 좋아)
        3. 중복문자 정규화 (ㅋㅋㅋ→ㅋ, ㅠㅠㅠ→ㅠ, !!!→!)
        4. 오타/맞춤법 관대하게 해석 (조아→좋아, 머거→먹어)
        5. 이모지/이모티콘 의미 파악 (😊→긍정, ㅠㅠ→부정)
        6. 초성체 해석 (ㅇㅇ→응응, ㄱㅅ→감사, ㅈㅅ→죄송)
        
        【VALID 판단 기준】
        다음 중 하나라도 해당하면 VALID:
        - 의미있는 답변: "응", "웅", "ㅇㅇ", "넵", "노", "아니", "그래"
        - 상태/감정 표현: 어떤 형태든 감정/기분/상태 표현
        - 선택/선호 표현: 음식, 활동, 취향 등 선택 의사
        - 문맥상 의미있는 모든 응답
        
        【INVALID 판단 기준】
        다음에만 INVALID 처리:
        - 단순 인사: "안녕", "하이", "ㅎㅇ", "hi", "hello"
        - 무의미 텍스트: "asdf", "test", "ㅁㄴㅇㄹ", "..."
        - 단독 특수문자/이모지: ".", "!", "?", "😊"(문맥 없이)
        - 완전 빈 입력 또는 공백만
        
        【핵심 원칙】
        - 의심스러우면 → VALID (사용자 편의 우선)
        - 맥락 불분명시 → 사용자가 자신의 상태를 말한다고 가정
        - 최대한 관대하게, 포용적으로 해석
        """

    @staticmethod
    def get_mood_check_prompt() -> str:
        base_rule = ValidationPrompter.get_base_validation_rule()
        return f"""
        {base_rule}
    
        목표: 입력이 **기분/감정/컨디션/심리상태** 관련 표현인지 판별.
    
        VALID 기준 (아래 모든 경우 포함):
        
        1. 직접적 기분 표현:
        - "기분 좋아", "기분 안좋아", "기분이 별로야"
        - "좋아", "안좋아", "나빠", "별로야", "그저그래"
        
        2. 감정 상태:
        - "행복해", "우울해", "슬퍼", "화나", "짜증나", "빡쳐"
        - "상쾌해", "꿀꿀해", "스트레스받아", "피곤해"
        - "설레", "두근두근", "불안해", "걱정돼", "무서워"
        
        3. 신체/컨디션 상태:
        - "컨디션 좋아", "컨디션 안좋아", "몸이 안좋아"
        - "몸상태 구려", "몸이 찌뿌둥", "머리 아파", "속 안좋아"
        
        4. 구어체/속어/신조어:
        - "꿀", "개꿀", "개좋아", "레알 좋음", "쩔어"
        - "현타", "멘붕", "멘탈 나감", "번아웃", "우울쓰"
        - "룰루랄라", "신나", "텐션업", "하이", "업됨"
        
        5. 축약/변형 표현:
        - "굿", "굿굿", "ㄱㅊ", "ㅇㅇ좋음", "ㅈㄴ좋아"
        - "ㅂㄹ", "ㅈㅉ", "ㅠㅠ", "ㅜㅜ", "ㅎㅎ"
        
        6. 이모지/이모티콘 (감정 맥락):
        - "😊", "😭", "😡", "🥲", "💔", "❤️", "^^", ":)", "T_T"
        
        7. 문맥상 기분 표현:
        - "오늘은 말이지 기분이 안좋아서 카레를 해먹었어"
        - "스트레스받아서 뭔가 달달한 게 먹고 싶어"
        - "우울해서 영화나 보고 싶어"
        - "오늘 좀 좋아", "지금 나빠", "요즘 그래"
        
        8. 간접적 기분 표현:
        - "날아갈 것 같아", "죽을 것 같아", "미칠 것 같아"
        - "하늘을 날 것 같아", "세상을 다 가진 기분"
        
        INVALID 예시 (기분/감정 무관):
        - "안녕", "하이", "테스트"
        - "메뉴 뭐야?", "날씨 어때?", "시간 알려줘"
        - 단순 URL, 전화번호, 숫자만
        
        판별 원칙:
        - 조금이라도 기분/감정/컨디션과 관련있으면 → VALID
        - 띄어쓰기, 맞춤법 오류 무시
        - 문장 일부에만 기분 표현 있어도 → VALID
    
        엄격 출력 형식:
        - VALID: <한 줄 코멘트>
        - INVALID: 기분을 파악하지 못했어ㅠㅠ 다시 입력해줘!
          (위 INVALID 문구를 **띄어쓰기까지** 완전히 동일하게 출력. 다른 문구 금지)
        """

    @staticmethod
    def get_hobby_check_prompt() -> str:
        base_rule = ValidationPrompter.get_base_validation_rule()
        return f"""
        {base_rule}
    
        목표: 입력이 **취미/관심사/좋아하는 것** 표현인지 판별.
    
        ✅ VALID 판정 기준 (하나라도 해당하면 VALID)
        
        【1. 명확한 취미 카테고리】
        활동형: 운동, 헬스, 요가, 필라테스, 러닝, 축구, 농구, 테니스, 배드민턴, 수영, 등산, 
               클라이밍, 자전거, 스케이트, 서핑, 골프, 볼링, 당구, 탁구, 복싱, 주짓수
        문화형: 영화, 드라마, 음악, 독서, 전시, 공연, 뮤지컬, 연극, 콘서트, 페스티벌
        창작형: 요리, 베이킹, 그림, 사진, 글쓰기, 작곡, 편집, 디자인, 공예, 뜨개질, 자수
        디지털: 게임, 유튜브, 넷플, 웹툰, 애니, SNS, 블로그, 코딩, 3D모델링
        취향형: 카페, 맛집, 술, 와인, 위스키, 커피, 차, 디저트, 빵, 쇼핑, 패션, 뷰티
        기타: 여행, 캠핑, 차박, 낚시, 드라이브, 산책, 반려동물, 식물, 원예, 수집
        
        【2. 동사형/행동 표현 → 취미로 인정】
        - "~하기/보기/듣기/먹기/마시기/가기" 등 모든 동사형
        - "~하는거/보는거/듣는거" 같은 구어체
        - "~좋아해/~좋아함/~해/~함/~중" 등 현재형
        예: "영화보기", "맛집가기", "술마시는거", "게임함", "운동중"
        
        【3. 문장형 취미 표현】
        - "빵먹는게 인생의 낙" → 빵/디저트 취미
        - "요즘 드라마에 빠졌어" → 드라마 취미  
        - "주말마다 카페투어" → 카페 취미
        - "매일 유튜브봐" → 유튜브 취미
        - "넷플 정주행이 일상" → 넷플 취미
        
        【4. 브랜드/플랫폼/장르 = 취미】
        - 스트리밍: 넷플릭스, 왓챠, 디즈니+, 쿠팡플레이, 티빙, 웨이브
        - 음악: K-팝, 재즈, 클래식, 힙합, 인디, EDM, 발라드, 트로트
        - 게임: 롤, 배그, 오버워치, 피파, 메이플, 원신, 스팀게임
        - SNS: 인스타, 틱톡, 트위터, 페북, 레딧, 디스코드
        
        【5. 간략/축약 표현도 인정】
        - 한 단어: "축구", "게임", "술", "영화" → VALID
        - 초성체: "ㅇㅎ"(영화), "ㄱㅇ"(게임) → 맥락상 추정 가능시 VALID
        - 영어: "workout", "netflix", "cooking" → VALID
        - 이모지: "⚽"(축구), "🎮"(게임), "🍺"(술) → VALID
        
        【6. 복수/나열 표현】
        - "운동이랑 게임" → VALID
        - "영화, 음악, 독서" → VALID
        - "이것저것" + 구체적 예시 → VALID
        
        【7. 부정/변화 표현도 취미 언급으로 간주】
        - "운동 안해" → 운동 언급했으므로 VALID
        - "게임 그만둠" → 게임 언급했으므로 VALID
        - "요즘 영화 안봐" → 영화 언급했으므로 VALID
        
        ❌ INVALID 기준 (명확히 취미 아닌 경우만)
        - 완전 무관: "안녕", "응", "아니", "몰라", "나중에"
        - 의무/일상: "출근", "회사", "숙제", "공부"(단, "자기계발" 등은 VALID)
        - 생리적: "잠", "밥", "화장실"(단, "맛집탐방", "요리" 등은 VALID)
        - 질문만: "뭐가 좋아?", "추천해줘", "어떻게 해?"
        
        【판단 원칙】
        - 조금이라도 취미/관심사 관련 → VALID
        - 대상/활동이 하나라도 명시 → VALID
        - 의심스러우면 → VALID (사용자 편의)
        - "없어", "없음"도 → VALID (취미 없다는 의사표현)
        
        엄격 출력 형식:
        - VALID: <한 줄 코멘트>
        - INVALID: 취미/관심사를 알아듣지 못했어ㅠㅠ 다시 입력해줘!
          (위 INVALID 문구를 **띄어쓰기까지** 완전히 동일하게 출력. 다른 문구 금지)
        """

    # 선택에 관련된 프롬프터이다.
    @staticmethod
    def get_choose_prompt() -> str:
        logger = logging.getLogger(__name__)

        base_rule = ValidationPrompter.get_base_validation_rule()
        logger.info(f"choose 프롬프터로 들어오는지 확인하기")

        return f"""
        {base_rule}
    
        목표: 사용자의 선택 의사를 **"상품 추천"**으로 분류한다.
        
        ✅ VALID 기준 (하나라도 해당하면 → "상품 추천"으로 판정)
        
        【1. 긍정/동의 표현】
        한국어: 네, 예, 응, 어, 오케이, 좋아, 좋아요, 그래, 그래요, 알았어, 알겠어, 콜, 굿, 
               ㅇㅇ, ㅇㅋ, ㄱㄱ, ㄱㅇ, 오키, 넵, 넹, 웅, 어어, 그러자, 해줘, 부탁해
        영어: yes, yeah, yep, sure, ok, okay, good, great, fine, alright, let's go
        이모지: 👍, 👌, ✅, 💯, 🙆, 😊, 😄, ✨
        
        【2. 추천 요청 표현】
        직접: 추천해줘, 추천해, 추천부탁, 추천좀, 추천해주세요, 추천바람
        간접: 뭐가 좋아?, 골라줘, 정해줘, 선택해줘, 알아서해줘, 너가 정해
        구어: 추천ㄱㄱ, 추천고, 추천가즈아, 추천각, 추천하셈, 추천플리즈
        
        【3. 상품/쇼핑 관련】
        보기: 상품볼래, 상품보자, 상품보여줘, 뭐있어?, 뭐파나?, 구경할게
        구매: 사고싶어, 살래, 구매할게, 주문할게, 이거사자, 쇼핑하자
        관심: 궁금해, 알려줘, 정보줘, 링크줘, 자세히, 더보여줘
        
        【4. 선택/결정 표현】
        지시형: 이거, 이걸로, 이거로, 그거, 그걸로, 저거, 저걸로
        순서형: 첫번째, 두번째, 1번, 2번, 왼쪽, 오른쪽, 위, 아래, 상단, 하단
        기호형: A, B, C, 가, 나, 다, ①, ②, ③
        
        【5. 확정/진행 표현】
        확정: 확정, 결정, 픽스, 이걸로확정, 이거다, 바로이거
        진행: 진행, 계속, 다음, 고고, 가보자, ㄲㅈ, 시작
        완료: 완료, 끝, 오케이끝, 결정완료, 선택완료
        
        【6. 간접 긍정 (맥락상 추천 수락)】
        - "한번 볼까" → 관심 표현이므로 VALID
        - "재밌겠다" → 긍정적 반응이므로 VALID  
        - "괜찮네" → 수락 의미이므로 VALID
        - "그것도 좋지" → 동의 표현이므로 VALID
        - "뭐 어때" → 무관심하지만 진행 의사이므로 VALID
        - "맘에 들어" → 긍정 평가이므로 VALID
        
        【7. 변형/오타 표현】
        - "조아", "조와", "좋아여", "좋아용" → 좋아
        - "추천헤줘", "추천해조", "추천해죠" → 추천해줘
        - "넴", "네엡", "네에", "녜" → 네
        - "어엉", "어어어", "어~" → 어
        
        【8. 복합 표현】
        - "응 추천해줘" → VALID
        - "좋아 보여줘" → VALID
        - "네 상품 궁금해" → VALID
        - "ㅇㅇ 고고" → VALID
        
        ❌ INVALID 기준 (명확한 거부/보류만)
        
        【거부 표현】
        - 직접: 아니, 아니야, 싫어, 안돼, 노, 별로, 안할래, 됐어
        - 간접: 다음에, 나중에, 담에, 생각해볼게, 고민해볼게
        
        【애매/보류 표현】  
        - 불확실: 글쎄, 흠, 음, 어..., 모르겠어, 잘모르겠는데
        - 질문만: "이게뭐야?", "어떻게해?", "설명해줘"(추천 요청 아님)
        
        【판단 원칙】
        - 조금이라도 긍정/관심 → VALID ("상품 추천")
        - 명확한 거부/보류만 → INVALID
        - 의심스러우면 → VALID (사용자 편의)
        - 이모지만 있어도 긍정적이면 → VALID
        
        엄격 출력 형식:
        - VALID: 반드시 **"상품 추천"** (다른 텍스트 금지)
        - INVALID: 선택을 알아듣지 못했어ㅠㅠ 둘 중 하나를 선택해줘!
          (위 INVALID 문구를 **띄어쓰기까지** 완전히 동일하게 출력. 다른 문구 금지)
        """

    # 추천 플로우에 관한 것이다. 여기서 "다른거" 및 다른 상품 추천에 대한 입력을 받는다.
    @staticmethod
    def get_recommendation_prompt() -> str:
        base_rule = ValidationPrompter.get_base_validation_rule()
        return f"""
        {base_rule}
    
        목표: 사용자의 선택을 **"상품 추천"** 또는 **"다른 상품 추천"**으로 분류한다.
        
        ✅ VALID - "상품 추천" (현재 추천 수락)
        
        【1. 긍정/동의/수락】
        기본: 네, 예, 응, 어, 오케이, 좋아, 좋아요, 그래, 알았어, 콜, 굿
        축약: ㅇㅇ, ㅇㅋ, ㄱㄱ, ㄱㅇ, ㅇㅈ, ㄴㄴ, ㄴㅇㅅ
        구어: 넵, 넹, 웅, 어어, 오키, 오케, 그러자, 가보자, ㄲㅈ
        영어: yes, yeah, yep, sure, ok, okay, good, great, fine
        이모지: 👍, 👌, ✅, 💯, 🙆, 😊
        
        【2. 선택/지정 표현】
        지시: 이거, 이걸로, 이거요, 이거다, 그거, 저거, 요거
        순서: 첫번째, 두번째, 1번, 2번, 1, 2, 위, 아래, 왼쪽, 오른쪽
        기호: A, B, C, 가, 나, 다, ①, ②, ③
        
        【3. 구매/진행 의사】
        구매: 살게, 살래, 사자, 구매, 주문, 결제, 사고싶어
        진행: 진행, 계속, 다음, 고고, 확정, 결정, 픽스, 완료
        관심: 괜찮네, 맘에들어, 이쁘다, 좋은데, 나쁘지않아
        
        【4. 현재 추천 긍정 평가】
        - "이거 괜찮은데" → 현재 추천 긍정
        - "마음에 들어" → 현재 추천 수락
        - "이걸로 하자" → 현재 추천 선택
        - "바로 이거야" → 현재 추천 확정
        
        ✅ VALID - "다른 상품 추천" (재추천 요청)
        
        【1. 명시적 다른/변경 요청】
        다른: 다른거, 다른걸로, 다른것, 다른상품, 다른옵션, 다른추천
        변경: 바꿔줘, 바꾸자, 변경, 체인지, 교체, 교환
        재요청: 다시, 또, 새로, 리셋, 재추천, 다시추천
        
        【2. 불만족/거부 + 대안 요청】
        거부: 이거말고, 말고다른거, 패스, 스킵, 넘어가, 다음
        불만족: 별로야, 안땡겨, 싫어, 마음에안들어, 안이뻐, 구려
        의문: 다른건없어?, 또없어?, 더있어?, 옵션더?, 그밖에?
        
        【3. 구어체/축약 표현】
        - "ㄷㄷ" (다른거)
        - "다른걸로ㄱㄱ"
        - "체인지요"
        - "넥스트"
        - "패쓰"
        
        【4. 간접 재추천 요청】
        - "음... 다른 것도 보고싶어" → 추가 옵션 원함
        - "이것보다 좋은거 없어?" → 더 나은 추천 원함
        - "좀 더 볼래" → 다른 옵션 탐색
        - "고민되네, 다른것도" → 대안 요청
        - "이거 아닌것같아" → 다른 추천 암시
        
        【5. 비교/탐색 표현】
        - "다른 스타일로"
        - "다른 가격대로"
        - "다른 브랜드로"
        - "비슷한 다른거"
        - "완전 다른거"
        
        【6. 복합 표현 처리】
        - "아니 다른거" → "다른 상품 추천"
        - "음 패스" → "다른 상품 추천"  
        - "별로인데 다른거" → "다른 상품 추천"
        - "좋긴한데 다른것도" → "다른 상품 추천"
        
        ❌ INVALID 기준 (애매/보류)
        
        【보류/고민】
        - 불확실: 글쎄, 흠, 음, 어..., 모르겠어, 잘모르겠네
        - 보류: 나중에, 다음에, 담에, 생각해볼게, 고민중
        - 질문만: "이게뭐야?", "가격이얼마야?", "설명해줘"
        
        【판단 우선순위】
        1. "다른"이 포함되면 → "다른 상품 추천"
        2. 명확한 거부+대안 요청 → "다른 상품 추천"  
        3. 긍정/선택/구매 의사 → "상품 추천"
        4. 애매하면 문맥 판단 → 대부분 "상품 추천"
        5. 명확한 보류만 → INVALID
        
        엄격 출력 형식:
        - VALID (현재 추천): 반드시 **"상품 추천"**
        - VALID (재추천): 반드시 **"다른 상품 추천"**
        - INVALID: 선택을 알아듣지 못했어ㅠㅠ 둘 중 하나를 선택해줘!
          (위 INVALID 문구를 **띄어쓰기까지** 완전히 동일하게 출력. 다른 문구 금지)
        """

    # 다른 상품 추천 플로우, 유효성 검사
    # 현재는 일단 수량도 받게끔 해뒀는데, 반영은 아직 안 되어 있다.
    @staticmethod
    def get_re_recommendation_prompt() -> str:
        base_rule = ValidationPrompter.get_base_validation_rule()
        return f"""
        {base_rule}
    
        목표: 사용자가 **추천된 상품이 마음에 들지 않아** 다른 상품을 다시 보고 싶어 하는지 판별.
    
        ✅ VALID 기준 (하나라도 만족하면 VALID)
        
        【1. 명시적 재추천 요청】
        다른: 다른거, 다른걸로, 다른것, 다른상품, 다른옵션, 다른추천, 딴거
        재추천: 다시, 재추천, 새로추천, 다시보여줘, 새로보여줘, 리셋
        변경: 바꿔줘, 바꾸자, 변경, 체인지, 교체, 교환, 스위치
        
        【2. 거부/불만족 표현】
        거부: 싫어, 싫다, 안돼, 별로, 노, 아니, 패스, 스킵, 넘어가
        불만족: 안땡겨, 안이뻐, 구려, 맘에안들어, 마음에안들어, 취소
        비교: 이거말고, 말고다른거, 이것보다, 이거아닌거
        구어: ㄴㄴ, ㄴㅇ, ㅂㄹ, ㅈㅉ, 에바, 노잼, 꽝
        
        【3. 추가/계속 요청】
        추가: 더, 또, 더보여줘, 또보여줘, 계속, 넥스트, 다음
        확장: 더많이, 추가로, 더있어?, 또없어?, 그밖에?, 옵션더?
        탐색: 구경더, 둘러보자, 더볼래, 쭉보자, 쫙보여줘
        
        【4. 수량 지정 재추천】
        숫자만: 3, 5, 10, 20 (단독 숫자도 인정)
        숫자+단위: 3개, 5개, 10개, 3가지, 5종류, 10종
        범위: 몇개, 여러개, 많이, 좀더, 대여섯개, 서너개
        표현: 3개더, 5개보여줘, 10개추천, 더많이보여줘
        
        【5. 구체적 피드백 + 암시적 재추천】
        디자인: 디자인별로, 안이뻐, 못생겼어, 스타일별로, 예쁜걸로
        가격: 비싸, 저렴한걸로, 가격대별로, 싸게, 비싸게
        색상: 색이별로, 다른색, 색상별로, 밝은색, 어두운색
        크기: 너무커, 너무작아, 사이즈별로, 큰걸로, 작은걸로
        기타: 무거워, 가벼운걸로, 재질별로, 브랜드별로
        
        【6. 간접/암시적 재추천】
        의문: 이게다야?, 이것밖에없어?, 끝이야?, 더없나?
        실망: 흠..., 글쎄..., 애매한데, 고민되네, 확안와
        요청: 다른스타일, 다른느낌, 다른분위기, 완전다른거
        
        【7. 복합 표현】
        - "아니 다른거" → VALID (거부+재추천)
        - "별로인데 더" → VALID (불만족+추가)
        - "5개만 더" → VALID (수량+추가)
        - "이거말고 10개" → VALID (거부+수량)
        - "싫어 패스" → VALID (거부 중복)
        
        【8. 변형/오타 허용】
        - "따른거" → 다른거
        - "시러" → 싫어
        - "벼로" → 별로
        - "더조" → 더줘
        - "ㄷㄷ" → 다른거
        - "ㅍㅅ" → 패스
        
        ❌ INVALID 기준 (재추천과 무관한 경우만)
        
        【선택/확정】
        - 번호 지정: "1번", "2번", "첫번째", "두번째", "위", "아래"
        - 선택 확정: "이걸로", "이거요", "오케이", "좋아", "맘에들어"
        
        【무관한 입력】
        - 인사: "안녕", "하이", "ㅎㅇ"
        - 질문: "이게뭐야?", "가격이얼마?", "배송언제?"
        - 잡담: "ㅋㅋ", "ㅎㅎ", "테스트"
        
        【판단 원칙】
        - "다른/싫어/별로" 중 하나만 있어도 → VALID
        - 숫자만 있어도 수량 재추천으로 → VALID
        - 불만족 암시만 있어도 → VALID
        - 선택/확정 의사만 → INVALID
        - 의심스러우면 → VALID (재추천 우선)
        
        엄격 출력 형식:
        - VALID: <상황에 맞는 한 줄 코멘트>
        - INVALID: 재추천 의도를 알아듣지 못했어ㅠㅠ "다른 거/마음에 안 들어" 같이 말해줘!
          (위 INVALID 문구를 **띄어쓰기까지** 완전히 동일하게 출력. 다른 문구 금지)
        """

    @staticmethod
    def get_default_prompt() -> str:
        base_rule = ValidationPrompter.get_base_validation_rule()
        return f"""
        {base_rule}

        목표: 입력이 맥락상 **의미 있는 응답**인지 판별(의미 없으면 INVALID).

        엄격 출력 형식:
        - VALID: <한 줄 코멘트>
        - INVALID: 입력을 알아듣지 못했어ㅠㅠ 다시 입력해줘!
          (위 INVALID 문구를 **띄어쓰기까지** 완전히 동일하게 출력. 다른 문구 금지)
        """

    @staticmethod
    def get_validation_prompt_for_flow(flow: str) -> str:
        """플로우별 검증 프롬프트 반환"""
        flow_prompt_mapping = {
            "mood_check": ValidationPrompter.get_mood_check_prompt,
            "hobby_check": ValidationPrompter.get_hobby_check_prompt,
            "choose": ValidationPrompter.get_choose_prompt,
            "recommendation": ValidationPrompter.get_recommendation_prompt,
            "re-recommendation": ValidationPrompter.get_re_recommendation_prompt,
        }

        prompt_method = flow_prompt_mapping.get(flow)
        if prompt_method:
            return prompt_method()
        else:
            return ValidationPrompter.get_default_prompt()

    @staticmethod
    def _canonical_invalid(flow: str) -> str:
        mapping = {
            "mood_check":  "기분을 파악하지 못했어ㅠㅠ 다시 입력해줘!",
            "hobby_check": "취미/관심사를 알아듣지 못했어ㅠㅠ 다시 입력해줘!",
            "choose": "선택을 알아듣지 못했어ㅠㅠ 둘 중 하나를 선택해줘!",
            "recommendation": "추천을 알아듣지 못했어ㅠㅠ 둘 중 하나를 선택해줘!",
            "re-recommendation":  "재추천 의도를 알아듣지 못했어ㅠㅠ \"다른 거/마음에 안 들어\" 같이 말해줘!",
            "_default":  "입력을 알아듣지 못했어ㅠㅠ 다시 입력해줘!",
        }
        return mapping.get(flow, mapping["_default"])

    def _parse_validation_response(self, response: str, flow: str = "_default") -> tuple[bool, str]:
        if not response:
            return False, ValidationPrompter._canonical_invalid(flow)

        r = response.strip()
        ru = r.upper()

        if ru.startswith("VALID:"):
            return True, r.split(":", 1)[1].strip() if ":" in r else ""

        if ru.startswith("INVALID:"):
            msg = r.split(":", 1)[1].strip() if ":" in r else ""
            canon = ValidationPrompter._canonical_invalid(flow)
            # 모델이 다른 문구를 넣었으면 강제로 표준 문구로 교체
            return False, (msg if msg == canon else canon)

        # 형식을 어겼을 때도 표준 INVALID로 회복
        return False, ValidationPrompter._canonical_invalid(flow)